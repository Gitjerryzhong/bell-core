buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.1"
group "cn.edu.bnuz.bell"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-plugin-testing"

    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-plugin-rest"

    provided "org.springframework.boot:spring-boot-starter-security"
    provided "org.springframework.security.oauth:spring-security-oauth2"

    provided "org.postgresql:postgresql"
    provided "org.grails.plugins:hibernate5"
    provided "org.hibernate:hibernate-core:$hibernateVersion"

    provided "com.netflix.eureka:eureka-client"

    compile 'org.springframework.statemachine:spring-statemachine-core:1.2.1.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-commons'
}

bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "bell core sys"
    desc = "Bell core system domain and service"
    developers = [yanglin:"Yang Lin"]
    portalUser = ""
    portalPassword = ""
}
